// Ждём, пока документ полностью загрузится
document.addEventListener("DOMContentLoaded", () => {
    console.log("WebApp запущен!");

    const sectionTitles = {
        shop: 'Магазин',
        exchange: 'Биржа',
        play: 'Играть',
        'my-deliveries': 'Мои доставки'
    };
    const headerText = document.getElementById("header-text");
    const navButtons = document.querySelectorAll("#bottom-nav button");
    const sections = document.querySelectorAll("main > section");
    const initialSection = "shop"; // Начальная вкладка

    // Обновление активной секции
    function setActiveSection(section) {
        if (!sectionTitles[section]) {
            console.error(`Секция ${section} не найдена!`);
            return;
        }

        // Обновляем текст заголовка
        headerText.textContent = sectionTitles[section];

        // Скрываем все секции и показываем нужную
        sections.forEach((sec) => sec.classList.add("hidden"));
        document.getElementById(section).classList.remove("hidden");

        // Обновляем активность кнопок
        navButtons.forEach((button) => {
            button.classList.toggle("active", button.getAttribute("data-section") === section);
        });
    }

    // Устанавливаем обработчики на кнопки нижней панели
    navButtons.forEach((button) => {
        button.addEventListener("click", () => {
            const section = button.getAttribute("data-section");
            setActiveSection(section);
        });
    });

    // Инициализация
    setActiveSection(initialSection);

    // Кнопка Play
    const playButton = document.getElementById("playButton");
    const gameContainer = document.getElementById("game-container");

    if (playButton) {
        playButton.addEventListener("click", () => {
            playButton.style.display = "none";
            gameContainer.style.display = "block";
            console.log("Игра началась!");
        });
    }

    // Игровой процесс
    const player = document.getElementById("player");
    const map = document.getElementById("map");
    let positionX = 10;
    let positionY = map.clientHeight - 60;

    if (player && map) {
        document.addEventListener("keydown", (e) => {
            const step = 10;

            if (e.key === "ArrowUp" && positionY > 0) {
                positionY -= step;
            } else if (e.key === "ArrowDown" && positionY < map.clientHeight - 50) {
                positionY += step;
            } else if (e.key === "ArrowLeft" && positionX > 0) {
                positionX -= step;
            } else if (e.key === "ArrowRight" && positionX < map.clientWidth - 50) {
                positionX += step;
            }

            // Обновляем позицию игрока
            player.style.top = `${positionY}px`;
            player.style.left = `${positionX}px`;
        });
    }

    // Анимация для плавного переключения секций
    sections.forEach((section) => {
        section.style.transition = "opacity 0.3s ease-in-out";
    });

    function animateSectionChange() {
        sections.forEach((section) => {
            if (section.classList.contains("hidden")) {
                section.style.opacity = 0;
            } else {
                section.style.opacity = 1;
            }
        });
    }

    // Подключаем анимацию к переключению секций
    navButtons.forEach((button) => {
        button.addEventListener("click", animateSectionChange);
    });

    // Система очков (пример)
    let score = 0;
    const scoreDisplay = document.createElement("div");
    scoreDisplay.style.position = "absolute";
    scoreDisplay.style.top = "10px";
    scoreDisplay.style.right = "10px";
    scoreDisplay.style.backgroundColor = "rgba(0,0,0,0.5)";
    scoreDisplay.style.color = "white";
    scoreDisplay.style.padding = "10px";
    scoreDisplay.style.borderRadius = "5px";
    scoreDisplay.textContent = `Очки: ${score}`;
    gameContainer.appendChild(scoreDisplay);

    function updateScore(points) {
        score += points;
        scoreDisplay.textContent = `Очки: ${score}`;
    }

    // Добавляем пример логики для очков
    setInterval(() => {
        if (gameContainer.style.display === "block") {
            updateScore(1); // +1 очко каждую секунду
        }
    }, 1000);
});